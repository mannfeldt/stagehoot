{"version":3,"sources":["base.js","components/Header.js","components/pages/Create.js","components/pages/Host.js","components/pages/Play.js","components/pages/Home.js","App.js","serviceWorker.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Header","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","openMenu","event","setState","anchorEl","currentTarget","state","bind","assertThisInitialized","handleClose","titleText","options","route","window","location","href","substr","indexOf","react_default","a","createElement","id","AppBar_default","position","Toolbar_default","className","Link","to","Button_default","IconButton_default","onClick","MoreVert_default","Menu_default","open","onClose","items","push","key","length","MenuItem_default","Component","Create","Host","Play","Home","App","HashRouter","components_Header","Route","exact","path","render","pages_Play","pages_Host","pages_Create","pages_Home","Boolean","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f67fb7cf.chunk.js","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/database';\r\n\r\n//PROD\r\nvar prodConfig = {\r\n  apiKey: \"AIzaSyB8vYoKiw2DlJycM5bqKKaU4vK_0n7HcsU\",\r\n  authDomain: \"stagehoot.firebaseapp.com\",\r\n  databaseURL: \"https://stagehoot.firebaseio.com\",\r\n  projectId: \"stagehoot\",\r\n  storageBucket: \"stagehoot.appspot.com\",\r\n  messagingSenderId: \"589747985768\"\r\n};\r\n\r\n//DEV\r\n\r\nconst fire = firebase.initializeApp(prodConfig);\r\n\r\nexport { fire }","import React, { Component } from 'react';\r\n//import './header.css';\r\nimport { Link } from 'react-router-dom';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n//import headerImg from './header.jpg';\r\nimport { fire } from '../base';\r\nimport firebase from 'firebase/app';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nclass Header extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      anchorEl: null\r\n    };\r\n    this.openMenu = this.openMenu.bind(this);\r\n    this.handleClose = this.handleClose.bind(this);\r\n\r\n  }\r\n\r\n  openMenu = event => {\r\n    this.setState({\r\n      anchorEl: event.currentTarget,\r\n    });\r\n  };\r\n\r\n  handleClose() {\r\n    this.setState({\r\n      anchorEl: null\r\n    });\r\n  }\r\n\r\n  render() {\r\n    function MenuItemList(props) {\r\n      let items = [];\r\n      items.push(<Link key={items.length} to={'/'}><MenuItem onClick={props.onClose}>Home</MenuItem></Link>);\r\n      items.push(<Link key={items.length} to={'/play'}><MenuItem onClick={props.onClose}>Play</MenuItem></Link>);\r\n      items.push(<Link key={items.length} to={'/host'}><MenuItem onClick={props.onClose} >Host</MenuItem></Link>);\r\n      items.push(<Link key={items.length} to={'/create'}><MenuItem onClick={props.onClose} >Create</MenuItem></Link>);\r\n      return (<div className=\"header-menulist\">\r\n        {items}\r\n      </div>);\r\n    }\r\n\r\n    let titleText = \"Stagehoot\";\r\n    if (fire.options.projectId === \"ettkilomjol-dev\") {\r\n      titleText = \"Ett Kilo Mj√∂l DEV\";\r\n    }\r\n    let route = window.location.href.substr(window.location.href.indexOf(\"/#/\") + 2);\r\n\r\n    return (\r\n      <div id=\"header\">\r\n        <AppBar position=\"static\">\r\n          <Toolbar className=\"toolbar\">\r\n            <div className=\"appbar-container--left\">\r\n              <Link className=\"appbar-title text-big\" to={'/'}>\r\n                {titleText}\r\n              </Link>\r\n              <span className=\"hide-mobile\">\r\n                <Link to={'/'}>\r\n                  <Button className={route === \"/\" ? 'appbar-nav-button selected-route':'appbar-nav-button'}>\r\n                    Home\r\n                  </Button>\r\n                </Link>\r\n                <Link to={'/play'}>\r\n                  <Button className={route === \"/play\" ? 'appbar-nav-button selected-route':'appbar-nav-button'}>\r\n                    Play\r\n                  </Button>\r\n                </Link>\r\n                <Link to={'/host'}>\r\n                  <Button className={route === \"/host\" ? 'appbar-nav-button selected-route':'appbar-nav-button'}>\r\n                    Host\r\n                  </Button>\r\n                </Link>\r\n                <Link to={'/create'}>\r\n                  <Button className={route === \"/create\" ? 'appbar-nav-button selected-route':'appbar-nav-button'}>\r\n                    Create\r\n                  </Button>\r\n                </Link>\r\n              </span>\r\n            </div>\r\n            <div className=\"appbar-container--right hide-desktop\">\r\n              <IconButton onClick={this.openMenu}>\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n              <Menu open={!!this.state.anchorEl} onClose={this.handleClose} anchorEl={this.state.anchorEl}>\r\n                <MenuItemList onClose={this.handleClose} />\r\n              </Menu>\r\n            </div>\r\n          </Toolbar>\r\n        </AppBar>\r\n      </div >\r\n    );\r\n  }\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\n\r\nclass Create extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app-page create-page\">\r\n            CREATE PAGE\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Create;","import React, { Component } from 'react';\r\n\r\nclass Host extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"page-container host-page\">\r\n            HOST PAGE\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Host;","import React, { Component } from 'react';\r\n\r\nclass Play extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app-page host-page\">\r\n            PLAY PAGE\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Play;","import React, { Component } from 'react';\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"app-page home-page\">\r\n            HOME PAGE\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\nimport './App.css';\nimport { fire } from './base';\nimport Header from './components/Header';\nimport Create from './components/pages/Create';\nimport Host from './components/pages/Host';\nimport Play from './components/pages/Play';\nimport Home from './components/pages/Home';\n\nimport {\n  HashRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Header />\n          <div id=\"content\">\n            <Route exact path=\"/play\" render={() => <Play />} />\n            <Route exact path=\"/host\" render={() => <Host />} />\n            <Route exact path=\"/create\" render={() => <Create />} />\n            <Route exact path=\"/\" render={() => <Home />} />\n          </div>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}